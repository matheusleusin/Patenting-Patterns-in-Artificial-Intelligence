appln_id;appln_title;appln_abstract
1496;method and system for remotely monitoring meters;"the invention concerns a method and system for remote monitoring of a current value displayed by a display (d) of a meter (1) consisting in: taking a picture (p) of said display with a camera equipping a portable communication device (2); sending said picture through the portable communication device and associated network or transferable storage device; collecting and storing at least said picture in a remote computerized datastore (6) communicating with a server (5); storing in said datastore information on the location from which the portable device has sent the picture. <image>"
4311;computer implemented method for generating interrelated computer executable files, computer-based system and computer program product;"summarizing, the present application relates to a computer implemented method for generating interrelated computer executable files at a server side comprising the steps of: \n - providing at a client side a graphical user interface associated with machine readable code in a machine language, wherein the graphical user interface displays data substantially in clear text; \n - selecting and associating two or more sections of machine readable code in machine language at said client side using said graphical user interface; \n - computer implemented verification of a coherence of said selected machine readable code at the client side before compiling said selected machine readable code at the client side and outputting the result of said coherence verification substantially in clear text, wherein \n verifying the coherence of said selected machine readable code comprises \n -- computer implemented verification of the coherence of said selected sections of machine readable code and/or \n -- computer implemented verification of the coherence of said associations of said selected sections of machine readable code; and \n - upon approval of the coherence, compiling the selected and associated two or more sections of machine readable code at a server side to create two or more interrelated executable files which are executable by the server as well as a computer-based system and a computer program product."
6117;palette-based color selection within a user interface theme;a method and system for generating one or more theme files to enable a device to customize colors in a user interface by using a palette to define said colors. the palette includes variable strings that have color values assigned to them. the strings are referred to in style sheets where color attributes are specified, such that colors can be redefined in the palette rather than in the style sheet.
6133;method and system for real time interactive video;a method and a system for real time interactive video include a display device having a frame, a live person, a computing machine having at least one processor, a memory, and a program, and a capture device. the program provides media content and effect track script. the capture device receives a live person image and integrates the live person image with the effect track script, and the program finally displays the outputs of the synthesized media content and the integrated live person image and effect track script on the frame at real time.
9603;method and apparatus for automatic configuration of meta-heuristic algorithms in a problem solving environment;a methodology is presented to address the need for rapid generation and optimization of algorithms that are efficient in solving a given class of problems within the framework of a software environment. the environment incorporates an evolutionary learning methodology which automatically optimizes the configurations of procedural components of the algorithm. in this way, both the efficiency and the quality of algorithm development is enhanced significantly.
14458;open framework system for heterogeneous computing and service integration;an open framework system for both heterogeneous computing and service integration is provided. the open framework system for both heterogeneous computing and service integration according to the present invention comprises a plurality of wrappers both registering and administrating services by service having similar function, a framework transferring an execution result of a service to the applications after discovering the service through the wrappers and invocating the service in case of receiving a message requesting the service from the applications, a message broker transferring messages between the applications and the framework, and an external module converting the protocols for meeting specification of the wrapper for an existing service in an open framework system for both heterogeneous computing and service integration efficiently establishing uss (ubiquitous smart space) by systematically integrating services of various protocols using in a plurality of applications under ubiquitous environment. since the application developed at the open framework system for both heterogeneous computing and service integration according to the present invention is self-existent for even changes of both service and environment, there is no need for the application to be amended in case that the services are further deleted or amended. therefore, the life period of the application may be prolonged.
23702;automation tool, use of an automation tool, and corresponding computer program;the invention relates to an automation tool (30) for planning and implementing an automation solution for a technical process (22), with access to a database (32) comprising a number of objects for the automation solution, wherein the database (32) as an object comprises at least one model (34, 42, 44) of the technical process (22) in which the database (32) comprises at least one transformation rule (48) for transforming the model (34, 42, 44).
25862;a method of stem taper, volume and product breakout prediction;a case-based reasoning method for predicting a complete stem profile of a tree, volume of a tree stem, and/or estimating the product breakout of a tree stem, wherein only partial stem measurements for said tree are available. the method comprises: providing a case base of measured tree stem profiles, said case base comprising a set of reading heights and a corresponding set of stem diameter readings for each measured stem, using the results of a scan of at least part of the stem of said query tree to create at least one query data case, determining the similarity between the at least one query data case and each stem profile in the case base, and selecting at least one stem profile from the case base based on its similarity with the at least one query data case, and using same to make the prediction/estimation.
25970;method and device for the implementation of a communication protocol in a control unit, especially for vehicular applications;"a method and device for the implementation of a communication protocol in an independent control unit comprising: \n ’«Ÿ??Ÿ¦’?Ÿ« a first procedure, using a graphical interface, of importation of the information contained in the messages exchanged in a communication network to which the control unit has to be connected; \n ’«Ÿ??Ÿ¦’?Ÿ« a second procedure of configuration of the activities to be carried out on the communication messages; \n ’«Ÿ??Ÿ¦’?Ÿ« a third procedure of automatic generation of a model equivalent to a message to be transmitted of to be received, following the previous operations."
36899;portable device and method for displaying ml content in a portable device;a portable device with a small-size display is used to display ml content originally intended for a display that is greater in terms of number of pixels. a miniature overview (23) of the content is rendered. the frames are further rendered, one by one, such that the width of each frame is adapted to the number of pixels in one dimension of the small-sized display. one of the rendered frames (21) is displayed and whenever a predetermined condition is satisfied, the miniature overview is displayed on top of the frame at a sub-portion of the display.
42959;a method for creating an optimal cutting plan for a strip-like material;a method for creating a cutting plan for a strip-like material for maximizing a quality yield of the process is invented. in the method a cutting plan for a strip-like material is made based on end-product data, and the strip-like material is driven at a production speed in a manufacturing machine or in a finishing machine, and strip length data is recorded. a chart of the strip-like material characteristics is generated and stored in a memory. the recorded strip length data and the chart of the strip-like material characteristics is calibrated with calibration data in a winding process, and during a set change in the winding process the cutting plan for the strip-like material is optimized for maximizing a quality yield of the process based on the end-product data and the calibrated chart of the strip-like material characteristics, and a revised cutting plan is created from the optimization result.
45968;system and method of content and translations management in multi-language enabled applications;an application component used to successfully manage all necessary content (including translations) of a full blown application that requires multi-language support. it can be integrated in any existing application (written in one of the supported programming languages) and can be configured to add, edit, delete, import and export an unlimited number of translations (distinct languages). the default and additional languages can be exported into and imported from an external file that can be given to a translator for processing. translated text will replace default text when a new language is chosen from the list of available translations without having the need of creating separate layouts, pages, components and/or structures.
49562;method and program network for handling exceptions;the method involves storing an exception information in form of a data structure (my-error-struct) for exception handling. an error program element (box) is provided, which has an input (in) and an output (out). the exception information of the system depends on the programmed hardware. the data structure comprises the information, such as type of the exception, place of the exception, or addressing mode. an independent claim is included for a program network for a graphic programming language.
50129;method and apparatus for improved control of air pressure delivered to a spray applicator;an apparatus for spray pattern control in an automated painting or coating apparatus comprising a supply of compressed gas (1), a valve means (11a,11b) controlling the gas supply to an applicator (5), and a conduit (1) transporting said gas from the supply to the applicator (5). a pressure sensing means (13) is arranged to measure the pressure of the gas delivered to the applicator (5), and a control loop (12) uses said valve means (11a,11b) to regulate the pressurized gas flow to control gas pressure at the applicator (5) based on the measured gas pressure.
52656;system and method for executing wireless applications using common ui components from a ui repository;a system and method is provided having an execution environment of an intelligent runtime device framework for generating user interface elements on a user interface (ui), declared on the device. the proposed method allows user interface definitions through xml metadata ui definitions (or other structured definition language schema) instead of requiring an implementation of the screen elements in executable code for the application. the ui definitions are stored in a common ui repository as a common resource of the applications on the device and is processed at runtime. the ui definitions are independent from the target platform of the device. the 'look and feel' of all the applications on the device can be customized and branded as required. defining layout and ordering of ui elements separately from the applications logic offers modularization of the applications. such modularization allows reuse of already defined ui screens and sharing them between different applications. the system has a themes and branding repository, a ui repository, a visualization engine, an execution environment, and a ui service. the method includes steps of parsing the xml definitions, applying theme and branding characteristics, providing a screen model to the execution environment, visualizing the user interface, and event handling. <image>
53257;system and method for dynamic configuration of scanning engine;"a method and system for facilitating targeted mobile advertisement , the system having: a mobile device having: a communication subsystem adapted to send and receive data; at least one application adapted to consume data, create data or consume and create data; a scan engine registered with the at least one application, the scan engine adapted to scan data consumed or created by the application, the scan engine further adapted to provide an ad trigger alert; and a configuration module within the scan module the configuration module adapted to store keywords, rules or keywords and rules; a mobile advertising server, the mobile advertising server adapted to receive ad trigger alerts from the scan engine; and an advertising content provider, the advertising content provider registering with the mobile advertising server and providing advertising content, wherein, the configuration module is adapted to dynamically be configured based on the information from advertising content provider."
53265;a dual surrogate memetic framework for single/multi-objective evolutionary optimization of computatoinally expensive problems;"a method for the optimization of real-world objects in terms of physical parameters comprises the steps: \n - creating an offspring population (p o ) by applying an evolutionary operator to a parental population (p c ), wherein the populations (p 0 , p 1 ) comprise individuals representing a real-world object to be optimized in terms of its physical parameters; \n - performing local refinements on at least one individual of the offspring population (p o ); \n - selecting a new parental population (p c ) from a selection pool (p s ) by using a fitness function, the fitness function using physical parameters for assessing the fitness; \n - repeating the above steps until a predetermined termination criterion is met; and \n - outputting the optimized individual as a representation of an optimized real-world object. the method may be applied in all forms of design or search problems that contain computationally expensive functions, simulator or analysis code, such as drug design, material design, rainfall prediction, aerospace design, aircraft design, aerodynamic design, structural design, electromagnetic design, physics-based modelling and etc."
54657;an architecture for self-developing devices;a self-developing device (1) capable of open-ended development makes use of a special motivational system for selecting which action should be taken on the environment by an associated sensory-motor apparatus (2). for a given candidate action, a motivational module (11) calculates a reward associated with the corresponding values that would be taken by one or more motivational variables that are independent of the nature of the associated sensory-motor apparatus. preferred motivational variables are dependent on the developmental history of the device (1), and include variables quantifying the predictability, familiarity and stability of sensory-motor variables serving as the inputs to the device (1). the sensory-motor variables represent the status of the external environment and/or the internal resources (3) of the sensory-motor apparatus (2) whose behaviour is controlled by the self-developing device (1). open-ended development is enabled by attributing a reward which is proportional to the rate of change of the history-dependent motivational variables. <image>
55014;system and method for effecting simultaneous control of remote computers;the invention describes a system and methodology for controlling multiple devices simultaneously from one control device. the control device is provided with a display having a plurality of windows, each having a visual representation related to the activity of the multiple devices. by relaying commands effected at the control device through a intermediary server, it is possible to simultaneously effect a corresponding processing of the same commands at each of the multiple devices. on effecting a command the multiple devices relay back, through the server, an image representative of the result of the processing of that command to the control device for display.
55016;system and method and apparatus for using uml tools for defining web service bound component applications;a system and method is provided for generating a software application including a plurality of components, a first set of the components having metadata descriptors expressed in a structured definition language for defining configuration information of the software application and a second set of the components being expressed as a series of scripted instructions coupled to the metadata descriptors for defining a workflow of the software application. the software application is used for facilitating interaction with a schema-defined service by a terminal device over a network. the system and method comprise a workflow extractor for identifying a workflow sequence generated by a modeling tool in an output of the modeling tool. the workflow sequence is associated with at least one of a flow diagram or a relational diagram of the modeling tool for describing interactions between a pair of components of the first set of components. the system and method also include a workflow generator for generating a workflow mechanism based on the identified workflow sequence, the workflow mechanism for associating processing of the metadata descriptors of one component of the pair of components with the other component of the pair of components during execution of the software application. the workflow mechanism can be a component mapping expressed in the metadata descriptors of the first set of components or expressed as the series of scripted instructions.
56013;method and system for generating of a control flow graph for representing a program code;"the present invention relates to generating of a control flow graph for representing and/or checking a program code, in particular, a program code being implemented by use of object oriented programming, wherein a checking of a system based on or operated by said program code is enabled by the generated control flow graph. the control flow graph is generated by generating of at least one class node in said control flow graph, wherein each class node represents a class defined by the program code; generating of at least one method node in said control flow graph, wherein each method node represents a method defined by a class defined by the program code; and generating of at least one statement node in said control flow graph, wherein each statement node represents a statement of a code of a method defined by the program code."
56892;simulation of complex systems;"the invention provides a software architecture for generating and self-assembling multi-scale computer models of dynamic systems, in a way that mimics (bottom-up) morphogenesis in living organisms, but with the addition of (top-down) constraints that result in efficient model generation. once generated, the model can be used for simulations within the same software architecture. exemplary applications include the generation of models for the simulation of: human cells / organs; non-living physical artefacts; business processes; urban environments; nanotech structures. non-modelling applications for the architecture are also envisaged, including: data mining applications; decision making; e-learning/training and self-programming agents. the architecture itself comprises a collection of nested physical objects ('fus') and a related, parallel collection of nested agents ('psus') that can act on the physical objects."
61574;method and apparatus for call categorization;a method and apparatus for automated categorization of an interaction between a member of an organization and a second party. the method comprises defining one or more criteria and one or more categories, wherein each category relates to a combination of one or more criteria. the criteria involve data extracted from the interactions as well as external data. each interaction is checked against the criteria, and is then assigned to one or more categories according to the met criteria. an optional evaluation of the categorization step, and improvement of the categorization if the evaluation results fall below a threshold are disclosed.
67455;application execution interruption managing method for e.g. computing system, involves executing control for changing current directory towards directory defined by parameterable value, following interruption and before file generation;the method involves generating a core file in a current application executing directory, where the file comprises a copy of a memory used by an application (24) at the moment of interruption of execution. a control for changing the current directory towards a directory defined by a parameterable value is executed by a computing system following to the interruption of the execution and before the generation of the file. independent claims are also included for the following: (1) a computing system for managing an interruption of execution of an application in a directory of the computing system (2) a computer program comprising program code instructions for implementing an application execution interruption managing method.
73246;reson - dynamic search key for knowledge based information management;the dynamic search key is used for easy recognition of stored objects on the basis of variables and their momentary values. all variables are converted to dynamic search keys, thus allowing the search to be made without any implied knowledge about what the various variables actually represent. the dynamic search key is produced by converting a variable's momentary value to a string of characters, consisting of letters, numbers, and symbols, by making sure that only such characters are chosen that can be utilized in a search key for the database system in use, and by splitting the variable in a selected number of segments within its boundary values, with a character allocated to each of said segments, and where each such segment is being split into another number of segments within the segments boundary values, until one reaches a lower limit, given by the required precision. for each level of splitting, a character is added to a character string which finally constitutes the dynamic search key. objects being searched for contains one or more such dynamic search keys for every variable that are required to identify the object, and representing those values of said variables that are required to uniquely identify the object. a knowledge based control system using this technology is being realized by including a database with objects containing control instructions that can be retrieved by using dynamic search keys that are generated from the momentary values of one or more relevant control variables.
81197;electronic investigative device and method for identifying the truth;the present invention provides a novel electronic investigative device for identification of truth from individuals who have committed an act of offence. the invention also provides a method for identification of truth based on bio-electric responses that are elicited by presentation of a unique design of nestled probes. the method advantageously utilizes the experiential knowledge present in a subject's brain that elicits a bio electric response to the presentation of probe. the invention is completely non-invasive and does not require an active participation of the subject. further, the method is fully automated to enable tamper proof results.
92048;method and computer system for display state adjustment of tree-nodes;"computer-implemented method, computer system and computer program product are provided. a computer-implemented method may comprise the following steps: \n providing a predefined tree, the tree having a plurality of nodes wherein each node has a predefined propagation attribute, a predefined control attribute and a predefined display attribute; \n changing the control attribute of a node, wherein the node defines a sub-tree of the tree; each node of the sub-tree having a parent-node; \n calculating the propagation attribute of each node of the sub-tree depending on the node's control attribute and the propagation attribute of the corresponding parent-node according to predefined propagation rules; and \n adjusting the display attribute of each node of the sub-tree with respect to the node's control attribute and the node's propagation attribute (193) according to predefined display rules."
95075;a system and method for mapping between message and data domains using a metadata defined mapping;it is desirable to drive down the complexity involved in developing the wireless application by reducing the need to do any explicit coding, as well as reducing device resources utilized by the application when provisioned. having an intelligent wireless device runtime environment (device runtime) that provides a set of basic services to manage the wireless application as a series of application components, and their interactions, can simplify the development effort and reduce resource allocation. the wireless application is described as a set of components. the data domain for this category of applications is defined using atomic data components. the communication between the device and a server is defined using atomic message components. both message and data components are described in metadata using a structured definition language such as xml. the relationships between the message and data components are embedded in the xml definitions in the form of message/data mappings. typically, outgoing messages are derived from some underlying data component and incoming messages affect the current state (or data representation) of the application. it is therefore apparent that the metadata defined mapping relationship is preferable between the expression of data and message components. <image>
95951;method and apparatus for outputting an object via a human-machine interface;in a method and corresponding apparatus for outputting an object (92-95, 112-115) via a human-machine interface a state of the object (92-95, 112-115) to be output is determined and a digital data archive is accessed. the data archive stores information on a plurality of different representations of the object (92-95, 112-115). information on a representation of the plurality of representations of the object (92-95, 112-115) respectively defines the representation in terms of at least one primitive object (96-102, 116, 117). information on a representation of the object (92-95, 112-115) is retrieved based on the determined state, and the object is output in a first state (92, 93, 95) or in a second state (112, 113, 115) based on the retrieved information on the representation.
102464;system and method for building wireless applications with intelligent mapping between user interface and data components;a system and method is described for effective management of a user interface (ui) of a wireless device by implementing direct mapping between the application data domain and ui screens and controls. the device has an intelligent wireless device runtime environment (device runtime) that provides a set of basic services to manage the wireless application, including a series of linked screen and data component definitions, and their interactions can simplify the development effort and reduce resource allocation. the data domain for this category of applications is defined using the atomic data component definitions. the communication between a device user interface and data components is defined using atomic screen component definitions. both screen and data component definitions are described in metadata using a structured definition language such as xml. the relationships between the screen and data component definitions are embedded in the xml definitions in the form of screen/data mappings. typically, rendered screens for display are derived from some underlying data component and screens controls affected by user events impact the current state (or data representation) of the application changes to the application domain data are automatically synchronized with the user interface, and user-entered data is automatically reflected in the application domain data. the primary mechanism behind this synchronization is the mapping of screens and data. this mechanism enables creation of dynamic and interactive screens. all changes to the data component can be immediately reflected on the screen and vice versa. this model allows building effective wireless applications based on server-to-device notifications. the data updates asynchronously pushed from the server are instantaneously reflected at the ui screen. <image>
102627;execution of textually-defined instructions at a wireless communication device;software, methods and devices for executing textually-defined instructions at a wireless communication device are disclosed. the instructions may be for performing a mathematical operation upon specified integer or floating-point operands, for performing one or more specified actions for each pass through a loop, for performing one of two sets of actions based on a user selection of one of two user interface controls, or for triggering a timer for delaying a subsequent action by a specified time interval. the instructions may be defined in a markup language such as extensible markup language (xml). the software, methods and devices may form part of a system for allowing varied wireless communication devices to interact with server-side software applications.
102656;localising unstructured resources;systems and methods of processing an unstructured resource which contains one or more data portions are described. the method comprises reading the unstructured resource into memory and accessing a data structure associated with the unstructured resource. this data structure contains a number of elements, each element including position information for a data portion in the unstructured resource. using this position information, data portions are located from the unstructured resource and processed and the locating and processing steps are repeated for each element in the data structure.
103253;method and interprocess communication driver for managing reqests of a database client to a database server;"the present invention concerns a method for managing the interprocess communication between at least one database client process (2) and at least one database server process (3) in a database system (5), wherein the at least one database client process (2) sends at least one request to the at least one database server process (3), the at least one request comprising one or more buffers, the method comprising the steps of: \n a. transferring (211), in a single step, the one or more buffers from the at least one database client process (2) to a buffer area (40); and \n b. transferring (223), in a single step, the one or more buffers from the buffer area (40) to the at least one database client process (2); wherein \n c. the buffer area (40) is directly accessible by the at least one database server process (3)."
108597;system and method for planning a technical system;the invention relates to a system and a method for planning a technical system. in order to provide the least complex possible diagnosis ability for any errors that may occur in a technical system in the planning stage, a method is proposed for the diagnosis of at least one status value of a technical system or a process that may be conducted using the technical system based on a semantic network (22), which represents knowledge about the technical system in the form of feature variables (17, 18, 32, 33, 34) and semantic dependencies (19) linking the feature variables (17, 18, 32, 33, 34), comprising the following process steps: - presetting at least one feature variable (17, 18, 32, 33, 34) with a system or status parameter (42) of the technical system as the default value and - forecasting the at least one status value by evaluating the preset semantic network (22), wherein the method is performed during the planning of the technical system.
110305;establishment method for private television system on the internet;provided are a private television system and a method for establishing the same on the internet. the private television system includes a tss-pc, a manager server, and a remote pc. the tss-pc includes a tv receiving card and a lan card for receiving a tv signal, and has compression/transmission software for transforming tv broadcastings to moving image files, compressing and transmitting the moving image files. the manager server is connected to the tss-pc through a network, receives network information of the tts-pc including mac address and ip address and stores the received network information with personal information. the remote pc is connected to a network for receiving the network information including the mac address and the ip address from the manager server 20 and includes reception/reproduction software for enabling a user to watch tv broadcasting by controlling the compression/ transmission software.
112782;method for optimisation of the amount of additives when treating fluids;the procedure for controlling optimal dosing quantity of processing chemicals in the treatment of continuously flowing fluids, comprises interrupting periodic processing of alogarithms to reach certain interruption criteria. an appropriate start measure value sm=mo is received and the dosing quantity change (delta di) and analysis of measure value change (delta mi) induced through the dosing quantity change are carried out. the controlling is pretended to begin the process, if the maximal (mmax) and/or minimal (mmin) measure value is set for the optimal dosing quantity. the procedure for controlling optimal dosing quantity (dopt) of processing chemicals in the treatment of continuously flowing fluids, comprises interrupting periodic processing of alogarithms to reach certain interruption criteria. an appropriate start measure value sm=mo is received and the first dosing quantity change (delta di) and analysis of measure value change (delta mi) induced through the dosing quantity change are carried out. the controlling is pretended to begin the process, if the maximal (mmax) and/or minimal (mmin) measure value is set for the optimal dosing quantity (dopt)=rd, and starts with the dosing quantity sd=do. the result of the analysis of the measure value change decides over the further procedure and the dosing quantity (d) is periodically changed by a predeterminable dosing quantity change at an interval of a predeterminable clock time (delta ti). a tolerance (ti) is given in which the sum of the measure value change is delta mi greater than ti and the dosing quantity change is delta di+1 greater than 0. in a positive or negative measure value change (delta mi) or measure value change (delta mi=0), the following dosing quantity change (delta di+1) to be distinguished of the same or opposite sign is assigned like the prior dosing quantity change (delta di), if mmax or mmin is put as standard value rm=f(rd). the periodic processing of the alogarithms of the procedure is selectively interrupted when carrying out inadmissibly high predetermined absolute measure value change, exceeding the measure value change (delta m) to predetermined value, exceeding predetermined number of rectified dosing step and/or directional reversing of the dosing step and/or reaching the dosing quantity limit. after the interruption of the periodic processing of the alogarithms, the parameter of the predetermined absolute measure value change, predetermined value of the measure value change, the initial dosing quantity (dstart), dosing step range (delta di), maximal dosing quantity (dmax), minimal dosing quantity (dmin), cycle time (delta ti) and tolerance (ti) is changed.
115399;system and method for presentation of wireless application data using repetitive ui layouts;"a repetitive layout scheme is provided that operates on a collection of data objects, such that each data object accords to the same data object definition (data model) expressed in a structured definition language. the repetitive layout consists of one ui section repeated for every object in the collection. each ui section is composed of a set of ui controls or sub-layouts. the ui controls in each section are associated with the data fields of the corresponding data object. a user of a wireless application interacting with the data objects can select ui sections and edit the controls within them via the user interface of the wireless device executing the application. any modifications are propagated to the data objects mapped to the respective ui sections. similarly, all modifications (driven by the application logic or incoming server messages) to the data objects are reflected in the ui section mapped to these objects. the generation and application of the repetitive layout scheme can include the steps: dynamic data entity generation (data composer stage); determining the collection of data objects that need to be presented by the user interface (rules engine stage); sorting the collection of data objects (sorting processor stage); generating the ui layout (layout generator stage); propagating ui changes back to the data model having the definitions of the data objects (data dispatcher stage); propagating data changes to the repetitive layout; and propagating changes to nodes of the data model. <image>"
116445;displaying messages on handheld devices;"a method of displaying messages on handheld devices (10). the device (10) displays messages in a scrollable viewport (74) of vertically arranged fields (76). date separators (80) inserted into the vertically arranged list of messages to enable the user to associate the messages with a date. each message has an associated date with a group of messages associated with a same associated date comprising a first associated message and other associated messages. the viewport is divided into a plurality of fields (76) arranged in a vertical list having a topmost field (76a) and a second field (76b), the second field (76b) being immediately below the topmost field (76a) in the vertical list, wherein the number of messages exceeds the capacity of the scrollable viewport (74) to display all of the messages at one time. the method comprises the steps of: identifying one of said other associated messages for display in the second field (76b); displaying a date separator item (80) in said topmost field (76a), wherein said date separator item (80) is based upon said same associated date of said one of said other associated messages; receiving a scroll command; identifying a next message for display in the second field (76b) after scrolling is applied and determining whether the next message is associated with the same associated date as the date separator item (80), and if so, maintaining display of the date separator item (80) in the topmost field (76a), and if not, displaying a new date separator item (80) in said topmost field (76a), wherein said new date separator item (80) is based upon a date associated with said next message.."
125775;design pattern and procedure for processing an object model;the pattern (70) is informatively implemented by a sequence of elementary transformations of an initial object model (40). each elementary transformation is a modification, suppression or creation of a modeling element of the object model, where the object model is conformed to unified modeling language notation. a user assistance program (50) interprets the pattern which triggers an execution of the transformation sequence using the program. independent claims are also included for the following: (1) a computer program product comprising a user assistance program (2) an object model transformation method (3) a code generation method.
126282;navigation between use locations of resources in automation systems;the method involves providing a variable (3) by an automation system (1) and using an identification characteristic for a unique identification of the variable in another automation system (2). a use of the variable is indicated in the latter automation system based upon a proxy variable (4) mapping between the automation systems, where the proxy variable contains application locations of the variable in the respective automation system. the characteristic is hierarchically constructed with a system-specific path and a local identification of the variable. an independent claim is also included for a system comprising two automation systems.
126514;handheld electronic device having selectable input mode indicator and method therefor;a method of enabling the selection of a language to be employed as a method input language by a disambiguation routine of a handheld electronic device having stored therein a plurality of method input languages and disambiguation routine number, includes outputting an input mode indicator that indicates which one of the method input languages is currently employed by the disambiguation function as part of a current input mode and indicates another characteristic of the current input mode, enabling the input mode indicator to be selected, and enabling the current input mode to be changed in response to detecting a selection of the indicator.
132361;provision of data for data warehousing applications;a computer network architecture for making procurement-related information that has been generated on a transaction level available to data warehousing techniques is described. the computer network architecture includes a transaction processing layer (16) with at least one accounting component (16a) with a general ledger data base (30) for centrally storing information contained in accounted-related data sets, a data warehousing layer (12) for gathering and accumulating information provided by the transaction processing layer (16) and an additional data sourcing layer 18. the data sourcing layer (18) includes a duplicator (32) receiving the accounting-related data sets that will be or have been stored in the general ledger data base (30). the duplicator (30) delivers duplicates of such accounting-related data sets that fulfil a predefined criteria in a procurement context. the data sourcing layer (18) further comprises a source data base (36) for storing the duplicated data sets on a data line level. an extractor (38) of the data sourcing layer (18) interfaces the data warehousing layer (12) and selectively moves data contained in data lines or sets of data lines from the source data base (36) to the data warehousing layer (12). <image>
134944;multiple purpose integrated circuit;an integrated circuit is operable to execute boot loader code and a boot code from external memory. to provide security so that the cpu does not execute malicious codes, the circuit resets in a restricted mode in which only certain functional units may be connected. in the restricted mode the cpu is only able to fetch boot code from an external memory for transfer to an internal memory. a hash function operates on the fetched boot code to determine whether it is authentic and, if it is determined that the code is authentic the circuit is reset to an unrestricted mode to continue executing from the boot code now stored in the internal memory. further security is provided by a watchdog timer function which resets the circuit if the boot code is not determined to be authentic within a given period of time.
140741;method and computer system for handling incremental data in client-server communication;a server-controller (101-1) on a server (901) receives (410) a modification-request generated by a client-controller (100-2) of a client (900) to modify an original model (200-t1) of an application component that is stored on the server (901) into a modified model (200-t2). a server-renderer (101-2) generates (420) at least one browser-increment (300-i) that corresponds to the difference between the original model (200-t1) and the modified model (200-t2). a client-assembler (100-1) receives the at least one browser-increment (300-i) from the server (901) and updates at the client (900) an original dom component (300-t1) that corresponds to the original model (200-t1) with the at least one browser-increment (300-i), resulting in a modified dom component (300-t2) that corresponds to the modified model (200-t2). <image>
143269;software replacement method and related software replacement system;the present invention relates to a software replacement method, for replacing a first software package that comprises a command handling interface which is present at a computer system, by a second software package over a connection between an operator terminal and this command handling interface. at first the second software package is installed besides the first software package at the computer system. subsequently, the second software package is activated. then a contacting part of the second software package, after activation of this second software package, contacts the command handling interface. the command handling interface at contacting of the command handling interface by the contacting part of the second software package, switches from the first software package towards the second software package and keeps open the connection between the operator terminal and the command handling interface. <image>
144903;font data processing system and method;a method of facilitating the processing of font data for electronic data transfers to client devices includes storing a list of client font capabilities associated with one or more client devices, accessing font data in an electronic data transfer addressed to at least one client device, the at least one client device corresponding to the one or more client devices, comparing the accessed font data to the list of client font capabilities associated with the one or more client devices, and identifying augment font data based on the comparing the accessed font data to the list of client font capabilities associated with the one or more client devices. augment font data is then included in the electronic data transfer to the at least one client device. <image>
145805;method for customizing the visual attributes of a user interface;a method for customizing a complex field in a user interface, wherein the complex field has a predefined set of visual attributes to govern the appearance of graphic elements in the complex field, including text. the method operates in the context of a rendering operation and includes storing a current graphics context for the field, applying a new visual attribute to a region of the field, outputting graphics to the region governed by the new visual attribute, and restoring the graphics context for the remainder of the field. the visual attributes are theme-able attributes that may be specified in theme-attribute sets for implementing the user interface in accordance with a specific visual theme.
149254;power saving and handling broadcast as unicast traffic in a wlan;an access point (102) is to handle received broadcast or multicast traffic as multiple instances of unicast traffic, where each instance is destined for a corresponding wireless client device (120, 122, 124, 126, 128, 130) associated with the access point (102). a client device (400) may adjust its listen interval parameter according to predefined considerations, for example a charge level of a battery (420) to power the client device (400) and an expected usage model for the device (400). a client device (400) may initiate a reassociation request to inform the access point (102) of its adjusted listen interval parameter.
149256;system and method for managing communication for component applications;an application gateway server is provided for managing communication between an application executing in a runtime environment on a device and at least one backend server. the application gateway server comprises a message listener, a connector subsystem, and a messaging subsystem. the message listener receives messages from the component applications. the connector subsystem comprises a plurality of connectors, each of the plurality of connectors for communicating with one or more associated backend servers. the messaging subsystem comprises a message broker for processing messages received from the message listener and transmitting them to an associated one of the plurality of connectors and a communication mapping for identifying which of the plurality of connectors is to be used for each message in accordance with an origin of the message.
152472;method of automatically tuning motor controller and motor controller;the stability and/or robustness and/or performance of the motor controller system (1) is automatically evaluated and improved by the following steps: \n 1.1 generate a plant transfer function (h) from the system transfer function (ch) by eliminating from the system transfer function (ch) previously known controller contribution, \n 1.2 define a modified motor controller parameter set, \n 1.3 generate multiple values of a modified system transfer function (c' h) out of the plant transfer function (h), using the modified controller parameter set, the multiple values representing a practically continuous frequency range, where the practically continuous frequency range corresponds to the relevant operating frequency range (5) of the motor controller system (1), \n 1.4 evaluate stability and/or robustness and/or performance of the motor controller system (1) using the modified system transfer function (c'h), \n 1.5 improving the motor controller system (1) by defining different modified controller parameter sets, executing steps 1.3 to 1.4 for each modified controller parameter set and identifying the best parameter set out of the different controller parameter sets using the evaluations done according to 1.4.
152580;system and method for dynamically displaying process states in an automation system;the device has a selection unit for selecting an object graphically represented on a surface to be projected by a projector, where the object represents a state variable of an automated system. an input mask (4) is provided for inputting graphical characteristics of the object describing conditions through the projector, where the graphical characteristics of the object are representable based on actual value of the state variable. the input mask is formed as table (6), and a context menu (7) is provided for selecting the characteristics to be visualized. an independent claim is also included for a method for graphically projecting a surface of an operation and observation system.
153102;software release management;software release management begins with receipt of a release candidate comprising a software build for a particular target software release. it ends with the step of handing off that software build and associated meta-data to a manufacturing team. no changes to the software build itself are made during this process. information about builds, targets software releases and stock keeping units (software products) are stored using a hierarchical representation. a sequence of ordered testing and approval steps is stored and may be dynamically re-configured. a release manager automatically manages the testing and approval steps according to the sequence. web services are used to receive meta-data about the builds and release candidates.
153192;user interface manager and method for reacting to a change in system status;a user interface manager, interposed between a windows service and user interface modules that communicate with the windows service in distinct system status scenarios, can record interaction between the windows service and each of the user interface modules. the recorded interaction, along with information collected from the user interface modules, can be used in conjunction so that user interaction with a first one of the user interface modules may continue with a second one of the user interface modules after a switch from one system status (e.g., logged on) to another system status (e.g., locked). alternatively, responsive to the switch from one system status to another system status the user interface manager may simply stop the executing user interface module so that the interaction may be started over in the new system status.
153310;improvements in or relating computer network management;according to one embodiment of the present invention, there is provided a method of identifying components of a computer infrastructure, comprising building a graph-based model of at least a part of the computer infrastructure, determining the presence within the built graph of a predetermined sub-graph, and where it is so determined identifying the sub-graph within the built graph.
161766;method of compressing electrocardiogram data and electrocardiogram telemetry system using the same;in an electrocardiogram telemeter, a data acquirer is operable to acquire electrocardiogram data. a data compressor is operable to compress the electrocardiogram data with either a wavelet transform, a huffman coding, or an arithmetic coding, thereby generating compressed electrocardiogram data adapted to be transmitted to a remote receiver which is configured to reconstruct the electrocardiogram data.
163016;validating a standardized configuration description;the present invention is concerned with a validation of a configuration description of a substation automation (sa) system, or of a part or component thereof such as an individual intelligent electronic device (ied), that is extended beyond the mere xml schema validation as provided by the known scl-validation tools. in particular, the invention introduces machine-based validation of notations, requirements and/or conventions to be respected by the configuration description and/or the sa system, but not incorporated in or represented by the standardized syntax of the xml schema as defined in part 6 of the iec 61850 standard. to this end, said notations, requirements and/or conventions are initially converted into, or defined as, extended or augmented rules encoded in computer readable format. the content or information of a file comprising an substation configuration description language (scl) compliant description of an sa system, or of a part or component there of, is then read by parsing the file and checked for conformance to said rules. any inconsistency, error, wrong configuration or insufficient description found is displayed to a user, who may then correct the content or information in the file. the procedure according to the invention contributes, in an automated manner, to the correctness of the description of a substation automation (sa) system beyond the pure syntactical adherence to the iec 61850 standard.
163336;method of programming for providing polymorphism;a method of programming for providing polymorphism in any programming language, where a method over-write determination procedure is associated with any method that is to be enabled to be over-written in classes derived from the class in which said method is defined. preferably, in order to over-write a method in a derived class, a method over-write identifier is associated with a class in which a method of a superior class is being over-written, where the over-write identifier identifies the over-written superior class method. preferably said method over-write determination procedure either executes the method defined in the same class or an over-write method in a derived class, depending on the presence or absence of an over-write identifier in said derived class. <image>
167445;system and method for visualizing jumps in a sequential flow chart editor;the step chains editor (1) has graphic elements (3) corresponding the operating steps. directly sequential graphic elements are connectable by using lines (4), in one step chain and in-directly sequential graphic elements are connectable by using switches. a switch is provided, which has a switch start (5) and a switch destination (6) within a step chain (2). a switch is visualized within the step chain with the help of a connecting line (7), which connect the switch start and switch destination with each other. an independent claim is also included for a method for visualization and production of step chain describing the operating steps of a programmable controller by a step chains editor.
167773;apparatus and machine-readable medium and method for generating markup language representing a derived entity which extends or overrides attributes of a base entity;a markup language document (e.g. an xml document) may contain a first instance of a markup language element having an attribute with a first, platform-independent value, a second instance of the element having the attribute with a second, platform-specific value, and an indicator that the second value overrides the first. executable code may replace both of the first and second instances with a single instance having the attribute with the second value. alternatively the markup language document may contain a first instance of a markup language element having a first, platform-independent attribute, a second instance of the element having a second, platform-specific attribute different from the first attribute, and an indicator that the second instance extends the first. in this case executable code may replace both instances of the markup language element with a single instance having the first attribute and the second attribute.
177052;autonomous experimental design optimization;the underlying invention generally relates to the field of experimental aerodynamic and hydrodynamic design optimization issues, in particular to a method for an iterative (nondeterministic) optimization (p1) of specially designed aerodynamic and hydrodynamic surface structures (202) of aircrafts, ships and/or road vehicles, respectively, a computer software program for executing such a method, and a system for optimizing said surface structures (202). in this context, the invention presents a combination of a variable encoding length optimization algorithm based on said evolution strategy and an experimental hardware set-up (200) that allows to automatically change the surface properties of the applied material (202), starting with the overall shape and proceeding via more detailed modifications in local surface areas. <??>in one embodiment of the underlying invention, a system for the optimization (p1) of surface structures (202) is disclosed that comprises a computing device (102) for calculating optimized parameters of at least one (virtual) surface structure (202), an experimental hardware set-up (200) for measuring dynamic properties of a specific surface structure (202), and an interface (101) for feeding calculated parameters from the computing device (102) to the experimental set-up (200) and for feeding measured results back to the computing device (102) as quality values for the next cycle of the optimizing step (p1). <image>
178290;method for modifying notifications of events in an electronic device and corresponding device and computer program product;an embodiment relates to a novel apparatus and method for changing modes of notification in an electronic device. an electronic device includes a calendar application and a variety of other applications such as the message reader application or the daily alarm application. the device is configured to use the calendar application to track whether and how the user is notified of the receipt of an electronic. in one embodiment, the user specifically associates a profile behavior to the calendar entry when the calendar entry is first created. <image>
178463;representing spreadsheet document content;a representation of a spreadsheet is displayed on a mobile communication device after receiving a description of a spreadsheet. the description relates to a plurality of map cells, where each map cell corresponds to a cell block, and the description includes location information and primary data type information for each map cell. based on the location and content-type information in the description, a pictorial representation of the spreadsheet may be generated and displayed to a user of the mobile communication device. a mobile device server may not only generate the description, but also may interpret the user's selection of a region of interest and transmit enough information about the region of interest for the mobile communication device to present the region of interest to the user in a conventional viewer. <image>
178491;palette-based color selection within a user interface theme;methods and devices that enable the customization of colors in a user interface by using a palette to define colors. the palette includes strings that have color values assigned to them. the strings are referred to in style sheets where color attributes are specified, such that colors can be redefined in the palette rather than in the style sheet.
179354;system and method for provisioning component applications;a system and method are provided for provisioning component applications for retrieval by a device. the system comprises an application gateway server, which comprises a message broker for communicating between the system and the device. the application gateway server is configured for communication with a provisioning server and a discovery server. the provisioning server comprises a provisioning service for servicing a provisioning request and a provisioning depot for storing packaged component applications. the discovery server stores and manages component application bundles. the system further comprises a packaging application in communication with application gateway for retrieving a component application bundle, selecting elements from the component application bundle in accordance with the device for which the component application is being provisioned, creating a component application package using the selected elements, and making the packaged component application available to the device.
179379;system and method for applying workflow of generic services to component based applications;a system and method for representing a workflow for a plurality of components corresponding to a page-based application. the plurality of components are configured as a component based application to assist with messaging over a network between a device and a schema-defined service of a data source. the page-based application is configured as a series of presentation pages comprising embedded data, messaging and presentation elements for interaction with a user interface. the method and system comprise selecting a plurality of components comprising a data component having data descriptors representing the data elements and a message component having message descriptors representing the message elements and a presentation component having presentation descriptors representing the presentation elements, wherein at least two of the plurality of components being operatively coupled to one another and the descriptors are expressed in a structured definition language. the system and method also select a plurality of dependency links associated with events corresponding to the embedded elements, such that the dependency links describe the workflow of the plurality of components in respect to operation of the component based application when executed on the device. the system and method generate in an instructional language a set of instructions based on the dependency links, such that the set of instructions coordinate the operation of the plurality of components. the set of instructions are inserted in a workflow component, wherein the plurality of components and the workflow component are subsequently packaged as the component based application.
179390;system and method for designing component based applications;a system and method for providing a user interface system to develop an application having a first component with descriptors expressed in a structured definition language and a second component expressed as a series of instructions. the individual components interact for processing messages on a runtime environment of a device that are received from a data source over a network. the component applications comprise data components, presentation components, and message components, which are written in xml code. the component applications further comprise workflow components which are written in a subset of ecmascript, and are augmented with the xml code. the user interface system comprises a first module, such as a viewer or and editor, for developing the definitions of the first component through interaction with a data model that provides a persistent state of the application. the user interface system comprises a second module for developing the instructions of the second component through interaction with the data model. and a backend connector for providing the message mapping information of the data source to the first module. the first module generates the definitions based on the mapping information. the first and second components developed by respective the first and second modules are included in the application with other components where applicable.
179392;system and method for applying development patterns for component based applications;"a system and method for coordinating the development of an application including a first component having definitions expressed in a structured definition language and a second component having a series of instructions. the components defme the processing on a device runtime environment of messages communicated over a network between the device and a datasource. the system and method comprise a first development pattern configured for interaction with a development enviroment provided by a computer user interface, the first pattern for guiding a user of the user interface with a plurality of predefined steps to coordinate the development of the application components through user input events via the user interface the first pattern is configured for selecting from a plurality of patterns based on a component type central to the first development pattern such that he component type is selected from a plurality of types including at least one of data, message, screen, and workflow. the system and method also include a first module corresponding to the selected component type and configured for coupling to the first pattern. the first module is for developing the definitions of at least one of the components through interaction with a data model of the development environment providing a persistent state of the application. the operation of the first module is coordinated using the plurality of the predefined steps communicated to the user through the user interface; wherein the developed components are subsequently assembled as the application."
179415;system and method for unified visualization of two-tiered applications;an application generation environment coordinates development of component-based two-tiered applications using a unifying data model comprising an interconnected model of objects. the data model unifies the two-tiered application to present a single logical application for visualisation and for programming using a graphical user interface. the data model transparently programs tiers of the application in response to user input to program the single logical application. application components are generated for execution within a two-tiered execution environment such as a client device (e.g. a wireless mobile device) and a gateway server providing a stateful proxy with which to access services or a remote data source via a network. the application components may by generated with marks to denote portions thereof for execution within the respective tiers of the two-tiered execution environment.
179416;system and method for transformation of an application definition;an application generation environment coordinates development of component-based applications using an interconnected model of objects serialized in a first format of a structured definition language (e.g. xml). application components are generated for execution by a client device (e.g. a wireless mobile device) comprising a runtime environment and primarily define the processing of messages communicated over a network between the client device and an external data source such as a service or other remote application. definitions in accordance with a first format are transformed into a second format which is simplified and compact for less resource intensive interpretation by the runtime environment of the client device. a set of rules (e.g. xslt) may be applied for the transformation. the application generation environment may comprise an eclipse-based platform and the first format for serializing the interconnected model of objects be defined in accordance with a modelling framework (e.g. eclipse modelling framework (emf)).
179420;system and method for simplification of data structure in wireless communications;system and method for data simplification in wireless communications are enabled by an application developer toolkit (22) used to convert complex service messages (76, 84) to simplified data messages (72,84) for storing information associated with a remote service (18a,18b) that utilizes complex data structures (20) for conveying the information to devices that access the remote service. the application developer toolkit also outputs maps (52,54) for converting the complex service messages to the simplified wireless messages in a format of a simplified data structure (200), and maps simplified wireless messages to complex service messages. a proxy (40) located in a communications path (42,44) between a wireless device (56) and the remote service uses the maps to convert the complex service messages to the simplified service messages, and vice versa.
179424;method and system for extending scripting languages;"a method for extending a script language in a runtime environment of a data processing system to support an application, the runtime environment having a script language interpreter, the method comprising: subclassing a predetermined object defined by the script language to create a subclassed object, the predetermined object having an original method, the subclassed object having a respective replacement method for supporting the application; dynamically registering a symbol corresponding to the subclassed object; detecting the subclassed object in the application with the script language interpreter; and, executing the replacement method with the script language interpreter."
179427;system and method for automated building of component based applications for visualising complex data structures;"a system and method for generating a screen component configured to visualize a data structure in a displayed screen on a graphical user interface of a device. the screen component for comprising in an application for execution on the device and having definitions expressed in a structured definition language for defining the visualization of the data structure. the visualized data structure related to data content associated with messages communicated over a network between the device and a data source. the system and method comprises: a parser module for analyzing a set of predefined message and data definitions expressed in a structured definition language to identify corresponding data structure and message details related to the messages, the predefined message and data definitions for comprising in the application; a screen template for providing a representative example of the screen to be displayed on the graphical user interface; and a screen component generation module for applying the predefined message and data details to the screen template to generate the screen component; wherein the predefined message and data definitions and the screen component are subsequently assembled in to the application."
179430;system and method for facilitating development of an application and supporting access to a plurality of heterogeneous backend servers;a plug-in is provided for use with an authoring application. the plug-in facilitates development of a wireless application in communication with a backend server via a corresponding connector. the plug-in comprises an interface and an assembler. the interface interfaces with the authoring application and receiving a desired inquiry from the authoring application to be posted to the backend server. the assembler creates a schema-based description document describing the inquiry in accordance with a set of predefined criteria for ensuring that the connector is able to interpret the description document.
179434;method for upgrading application data according to a new application definition;a method is disclosed for upgrading preexisting application data according to a new application definition, the method comprises parsing the preexisting application data to provide parsed preexisting application data and converting the parsed preexisting application data according to the new application definition to thereby provide application data compliant with the new application definition.
179453;displaying messages on handheld devices;a method of displaying messages on handheld devices (10). the device (10) displays messages in a scrollable viewport (74) of vertically arranged fields (76). date separators (80) inserted into the vertically arranged list of messages to enable the user to associate the messages with a date. the date separators (80) have 'sticky' operation, meaning that the device (10) ensures a date separator (80) always appears within the viewport (74), even when the viewport (74) has been scrolled to the middle of a long list of messages all associated with the same date. the device (10) may ensure that the top field (74a) of the viewport (74) always contains a date separator (80) associated with the message immediately below.
179491;method and apparatus for controlling a display in an electronic device;a method and apparatus for presenting information is provided. in an embodiment, an electronic device with wireless telephony features is provided. an embodiment comprises a flexible dialog box tailored to the resources limitations of electronic devices.
180487;system and method for generating runtime metadata for use in the development of mobile device applications;a system and method for generating runtime metadata for use in the development of mobile device applications. a metadata file, such as an xml file that is used to capture the metadata for a database associated with a mobile device application, is used to generate initialization code. this initialization code, when executed, creates runtime metadata for the application database in terms of a first object (e.g. classid object) through which metadata associated with the application database is accessible and at least one second object (e.g. propertyid object) through which metadata associated with a property of a data record of the application database is accessible.
180525;automatic application definition distribution;"a new master application definition is installed at a server. responsively, the server determines the identity of a user associated with the server-side application related to the master application definition. the server may then generate an application definition file specific to the application and to the remote wireless device associated with the identified user. the application definition file may contain definitions for: a user interface format; a format for network messages; and a format for storing data. using these definitions, the wireless device may receive data generated by the server-side application and formatted in accordance with the definitions. the wireless device may then present a user interface for the application. preferably, the application definition file is an xml file. advantageously, when changes occur to previously established server-side applications, automatic updating of devices is efficiently accomplished."
180527;system and method for adaptive theming of a mobile device;in the field of mobile devices, it is desirable to allow parties extraneous to a mobile device's manufacturer the ability to theme the mobile device. it is also desirable to allow changes to the theme of the mobile device in order to reflect changes in the corporate identity or services offered by a vendor or carrier associated with the mobile device. herein provided are methods for the just in time theming of a mobile device. the methods allow for a mobile device to transmit identification information upon activation, receive user interface customization information in response to the transmitted identification information and to subsequently set the mobile device's user interface to correspond with the received user interface customization information. also provided are methods for a server to receive identification information, provide the appropriate user interface customization information based on the received identification information and supply the user interface information by transmitting the information.
180543;method and system for determining support for a memory card;"embodiments related to methods and systems for determining support for a memory card, where the memory card is accessible to a card reader and the card reader is in communication with an accessing device. one embodiment relates to a method comprising: a) transmitting a session request from the accessing device to the memory card via the card reader; b) receiving a first response to the session request from the memory card, the first response comprising first data related to a type of the memory card; c) determining at the accessing device that the memory card type is not recognized by any of a plurality of card drivers on the accessing device, based on the first data; d) for a selected one of the plurality of card drivers, transmitting a test command to the memory card, the test command being specific to a selected card type; e) receiving at the selected card driver a second response to the test command; and f) determining from the second response whether the selected card type corresponds to the memory card type and is supported by the selected card driver."
180544;method, system and machine-readable medium for building distributed software;in a method for building distributed software, a single computer program may be written which includes distinct sets of routines defining operation at distinct computing devices (or types of computing devices) in a distributed system. direct calls may be made between routines, even if the routines define operation of distinct computing devices. through examination and processing of the computer program, multiple computer programs which collectively constitute distributed software for the distributed system are created. each program defines the operation of a computing device within the system. direct calls are emulated using instructions for inter-process communication which effect remote routine invocation transparently from the perspective of the developer. in the result, the run-time operation of each output computer program at its respective target computing device is consistent with the operation defined for that computing device within the input computer program. advantageously, the developer may be shielded from numerous implementation details.
180546;auditing application activities;a compiled application may be audited by analyzing the compiled application to identify methods that may be called during execution of the compiled application. the identified methods may be correlated with controllable activities, i.e., those activities facilitated by public apis. an audit report may be used to report to a user or administrator indications that the compiled application may attempt certain activities.
180687;management method for server customer communication;methods for managing communications between server devices (30) and customer devices (11,12,13) comprise steps of reading / writing parameters at one of the devices (11,12,13,30) for configuring / monitoring the other one of the devices (11,12,13,30) and, to allow arbitrary parameters to be introduced, comprise steps of, for the parameters, creating attributes comprising extended markup language schemes for defining the parameters. said one of the devices (30) is linked to a northbound interface (33) and a southbound interface (31,32), the creating step being performed via the southbound interface (31,32). said one of the devices (30) is linked via the northbound interface (33) to for example a service provider (40) and via the southbound interface (31,32) to for example the customer device (11,12,13). the extended markup language schemes may define types, descriptions of the types, descriptions and/or metadata of the for example non-standardized parameters with names and values. the server device (30) may be an auto configuration server, the customer device (11,12,13) may be a customer premises equipment, the method may be a tr069 protocol.
190543;method and system for adapting a user interface of a device;"method for adapting a user interface of a device, comprising detecting user characteristic data of an active user, wherein said user characteristic data is descriptive of a capability of said active user to handle said user interface, determining an adapted user interface based on said user characteristic data; and approving said adapted user interface based on user feedback of at least one user with similar user characteristic data."
193313;mobile dataprocessing handheld apparatus;the device (1) has a data processor contained inside a housing (3) which has a front side (4) and a backside. the front side of the housing is provided with an input mechanism (6) for inputting data and for operating the device, and an indicator display (5) for showing images, processing and control information. another indicator display (7) is provided on the front side of the housing, in which the additional display is connected to a digital camera to show the images obtained from the digital camera. both indicator displays may be provided with touch screens.
198870;methods and apparatus for monitoring events and implementing corrective action in a computer system;"apparatus for assisting management of services provided by a computer system includes an inferencing engine (30) for carrying out inferencing operations on a declarative model (24) of a service, using facts about the system stored in a fact base (32). a resident goal store (102) contains declarative definitions of goals which concern availability of services and which it is desirable for the system to continue to satisfy; these definitions are linked to associated facts in the fact base. the service model (24) includes definitions of events which can occur in the system and may affect availability of services, and definitions of actions which can be taken to modify the configuration of the system. when occurrence of an event defined in the service model is reported to the apparatus, the event definition is used to guide analysis of the event report and appropriate updating of the fact base. goals which are linked to the updated facts are then examined to assess whether the goals are still satisfied. if a goal is no longer satisfied the service model is searched for actions which can re-configure the system to enable the goal to be re-satisfied. <image>"
199129;method of managing dynamic decision trees;a data packet switch includes a decision tree for classifying data packets, which can be dynamically modified. to conserve memory resources nodes which are found during modification to have matching effects are combined. if only a subset of paths to a node are relevant to a modification, the node is split. prior to implementation of the modifications, temporary nodes are inserted before modified nodes to preserve existing paths. these temporary nodes are controlled by a single memory value which can be changed to effect all the modifications to the decision tree simultaneously. <image>
210838;method for operating an automation device in combination with its description;the method involves instantiating a program code object e.g. continuous function chart function module, on an automation device (14). a description object is created appropriate to a type of the program code object based upon the instantiation. a description reference is stored in the program code object, where the description reference refers to the description object. an editing function to store data in the description object is called up when the description object is created. a visualization device (18) is assigned to the automation device to access the program code object. an independent claim is also included for an automation device comprising a type of a program code object.
215204;an adaptive fuzzy controller and simulation method;"an adaptive fuzzy controller for use with a controlled system and for controlling a first object of the controlled system in accordance with a system control parameter is described; whereby the fuzzy controller comprises: a fuzzy rule base (105) including control rules for performing a fuzzy inference operation; and an adaptive unit for adaptively changing a parameter relating to one of the control rules of the fuzzy controller in accordance with a multi-dimensional performance table having at least three dimensions, the inputs for the table being an error in the system control parameter, the rate of the change of the error in the system control parameter and a value related to a state of the controlled system or a value related to a state of an object in the controlled system. also methods of operating the controller are described, in particular its use in a control system for a nuclear reactor. a simulator is described for testing the controller. <image>"
217927;method for preparing a nanowire crossbar structure;"the present invention relates to a method for preparing a nanowire crossbar structure, comprising: (a) providing a substrate; (b) depositing thereon a composite structure comprising a nucleic acid-block copolymer having equidistant nucleic acid-catalyst binding sites and at least one catalyst nanoparticle functionalized to bind specifically to nucleic acid segments of the copolymer; (c) applying a directed gas flow and/or an alternating electric field onto the composite structure; and (d) applying chemical vapor deposition techniques, a use of such a structure and a structure obtainable by such a method. <image>"
222045;method and device for updating non-volatile memory items on a wireless device by checking and comparing a unique identifier item stored in said memory with a software identifier;"a method and apparatus of dynamically managing non-volatile memory items on a wireless device through a network, the method comprising the steps of: when connecting to said network, checking for a unique identifier item stored in said non-volatile memory items (14), if said unique identifier item exists, checking whether a value stored in said unique identifier is the same as a software identifier located in software on said wireless device (16), if said unique identifier item does not exist or said value is different from said software identifier, sending said software identifier along with an identifier indicating a carrier to said network along with an identifier indicating a carrier (20); receiving from said network a set of changes related to said software identifier; executing said of changes to update said non-volatile memory items (26); and writing said software identifier to said unique identifier item (28). in an embodiment, a new item is created instead of replacing an existing item to facilitate rollback to the existing item. <image>"
225746;method and computer system for editing documents;a computer system 900 and for developing a software application. the system includes an editor unit 110 configured to define a layout 300 of a graphical user interface of the software application. the system further includes a view zone generator unit 130 configured to determine the resolution of a device display being used for displaying the layout 300. the view zone generator unit further calculates a view zone 350 that is adjusted to the determined resolution, wherein the view zone 350 corresponds to the visible portion of the layout 300 on the device display. the calculated view zone is outlined in the editor unit 110.
229037;optimal display of multiple windows within a computer display;an apparatus and method for optimally displaying multiple windows on a display is provided. the multiple windows can be sequentially or simultaneously resized and/or repositioned. the method performs at least one of resizing or repositioning operation on at least one of the multiple windows to fit within the available display area. the method allows the user the ability to see a maximum of information from multiple windows and allows access to the scroll bars, title bars, status bars and command window of the multiple windows.
247353;resizing controls during localisation;a system and methods of generating a resized dialogs for use in a new language version of a software product are described. dialogs comprise many controls and when a software product is translated, some or all of these may need resizing. the resizing is achieved by calculating a display parameter associated with each of the controls and then comparing these required display parameters against data for the same dialog in other languages into which it has already been translated. if the same dialog in one of these other languages has, for each control in the dialog, a display parameter which is not less than the required display parameter in the new language, this other language is selected and the resized dialog for the new language is generated using the control positions and sizes for the selected other language.
254243;system and method for supporting a user interface;the system has an object (3) e.g. toolbar, provided on a graphical user interface (2) e.g. man-machine interface, for requesting a function, where the graphical user interface is navigatable for the selection of the object for a user. an information (7) is provided during the selection of the object such that the information informs about reasons of non-availability of the object and/or the possibility for requesting the function. the duration of obtaining the navigation on the object is detected. the information is graphically and/or acoustically representable. an independent claim is also included for a method for supporting a graphical user interface.
259958;application or service i.e. goojet service, creating, organizing, delivering, utilizing and/or accessing method for e.g. mobile phone, involves setting application, if application derived from web is selected;the method involves displaying a representation of nodes or descent leaf of node or root of a tree on a screen of a mobile terminal e.g. telephone, and selecting one of the representations on the terminal. an indication of node or leaf corresponding to the selected representation is communicated to the server by the terminal. identifiers of nodes or descent leaf of the selected node are supplied to the terminal by the server, and the supply, selection and communication operations are repeated, when the node is selected. an application is set, if application derived from a web is selected. independent claims are also included for the following: (1) a device for creating, organizing, delivering, utilizing and/or accessing an application (2) a computer program comprising instruction for implementing a method for creating, organizing, delivering, utilizing and/or accessing an application (3) a readable information support for implementing a method for creating, organizing, delivering, utilizing and/or accessing an application.
260100;multilayered hierarchical computer architecture for communication system, has event module receiving and/or sending event to lower layer and action module sending and/or receiving action from lower layer;the architecture (1) has upper and lower layers (2a, 2b), each comprising an object model (3a) that includes several states of the object. event module (6a) receives and/or sends an event to the layer (2b) of the architecture. action module (8a) sends and/or receives an action from the layer (2b). the event module is arranged for passing the state of the object model from a passed state (5a1) to an actual state (5a2) during the reception of the event from the layer (2b). the action model adds future states (5a3, 5a4) to the object model during the reception of the action from the layer (2b). an independent claim is also included for a method for modifying a state of object model of architecture of hierarchical layers for realizing a communication system between computer terminals.
266564;method for controlling a decision process seeking a goal in a determined application domain, such as economical, technical, organisational or analogous and system for performing the method;the decision making process uses agents (gm,um,p) applying pre-set rules and strategies to form relations, directed at a glo goal, between knowledge objects reflecting a viewpoint in the application domain and other objects reflecting other points of vi or other competencies in the same or related domains. knowledge objects use an alert index to trigger decisions.
269233;a molecular memory obtained using dna strand molecular switches and carbon nanotubes, and manufacturing method thereof;described herein are a molecular memory obtained using dna strand molecular switches and carbon nanotubes, and a manufacturing method thereof. in particular, the nonvolatile memory is manufactured according to an architecture that envisages the use of carbon nanotubes as electrical connectors and dna strands as physical means on which to write the information. in other words, the nonvolatile memory is made by means of a set of molecular dna strand switches, the addressing of which is controlled by molecular wires made up of carbon nanotubes. <image>
273355;method for detecting a biochemical interaction;a method for detecting a biochemical interaction between at least two interaction partners, comprising the steps of bringing into contact the at least, two interaction partners, taking a temporal sequence of measurements, each of them producing a measurement value describing the state of the interaction at a given point in time, adapting a mathematical model to the temporal sequence of measurements, whereby the model contains at least one first parameter characterising a temporal phase of increasing measurement values and at least one second parameter characterising a temporal phase of decreasing measurement values, and detecting the biochemical interaction by evaluating the first and second parameter.
